# This is a basic workflow to help you get started with Actions

name: IntegrateDevelop
run-name: IntegrateDevelop

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  pull_request:
    branches:
      - develop
    types:
      - closed 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# give permissions to this workflow
permissions:
  contents: write
  pull-requests: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "integrateDevelop"
  integrateDevelop:
    if: github.event.pull_request.merged == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # set current datetime to a variable
      - name: Set current datetime as env variable
        env:
          TZ: 'Asia/Tokyo'
        run: echo "CURRENT_DATETIME=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_ENV
      # create a branch, the name of which includes current datetime
      - name: Create new branch
        run: |
          git switch develop
          git switch -c integrateDevelop_${{ env.CURRENT_DATETIME }}
          git push -u origin integrateDevelop_${{ env.CURRENT_DATETIME }}
      # open pull requests to integrate
      - name: Open a pull request for step2
        run: |
          git switch integrateDevelop_${{ env.CURRENT_DATETIME }}
          PR_URI_STEP2=$(gh pr create \
            --base develop-step2 \
            --title integrateDevelop_step2_${{ env.CURRENT_DATETIME }} \
            --body "auto-generated pull request to integrate develop branches")
          echo "PR_URI_STEP2=$PR_URI_STEP2" >> "$GITHUB_OUTPUT"
      - name: Open a pull request for step1 change
        run: |
          git switch integrateDevelop_${{ env.CURRENT_DATETIME }}
          PR_URI_STEP1_CHANGE=$(gh pr create \
            --base develop-step1-change \
            --title integrateDevelop_step1-change_${{ env.CURRENT_DATETIME }} \
            --body "auto-generated pull request to integrate develop branches")
          echo "PR_URI_STEP1_CHANGE=$PR_URI_STEP1_CHANGE" >> "$GITHUB_OUTPUT"
      # merge those pull requests
      - name: Merge the pull requests
        run: |
          git switch develop-step1-change
          TES=gh pr status -c
          echo $TES
